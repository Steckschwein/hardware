GAL22V10    ; first line : used GAL
8Bit Dekoder    ; second line: any text (max. 8 char.)

; PIN assignment
;
A15 ; A15 of 6502 (Pin 25)
A14 ; A14 of 6502 (Pin 24)
A13 ; A13 of 6502 (Pin 23)
A12 ; A12 of 6502 (Pin 22)
A11 ; A11 of 6502 (Pin 20)
A10 ; A10 of 6502 (Pin 19)
A9  ; A9  of 6502 (Pin 18)
A8  ; A8  of 6502 (Pin 17)
A7  ; A7  of 6502 (Pin 16)	
A6  ; A6  of 6502 (Pin 15)	
A5  ; A5  of 6502 (Pin 14)	
GND
;
A4  	 ; A4  of 6502 (Pin 13)	
RW       ; RW of 6502 (Pin 34)
ROMOFF	 ; Remove ROM from Adress space if low, make unterlying RAM readable
CSROM    ; CS signal for ROM at $e000-$ffff 
CSLORAM  ; CS for ram between  $0000-$8000
CSHIRAM  ; CS for ram between  $8000-$cfff
CSUART   ; UART at $0200
CSVIA    ; VIA  at $0210
CSVDP	 ; VDP  at $0220
MEMCTL	 ; MEMCTL at $0230, control latch for ROMOFF, etc.
CSIO     ; 4xIO  at $0240  - $0270
VCC

;
;  boolean expressions
;
/CSROM   = /ROMOFF*RW*A15*A14*A13			; Reads  to $e000-$ffff go to the ROM, IF ROMOFF is High

CSLORAM = A15
        + /A14 * /A13 * /A12 * /A11 * /A10 * A9 * /A8 * /A7

/CSHIRAM = A15*/A13                       
         + A15*/A14
         + /RW*A15*A14*A13 					; Writes to $e000-$ffff go to the RAM
         + ROMOFF*RW*A15*A14*A13			; Reads  to $e000-$ffff go to the RAM, IF ROMOFF is Low


/CSUART	= /A15*/A14*/A13*/A12 * /A11*/A10*A9*/A8 * /A7*/A6*/A5*/A4	; $0200
/CSVIA	= /A15*/A14*/A13*/A12 * /A11*/A10*A9*/A8 * /A7*/A6*/A5* A4	; $0210
/CSVDP	= /A15*/A14*/A13*/A12 * /A11*/A10*A9*/A8 * /A7*/A6* A5*/A4	; $0220
/MEMCTL	= /A15*/A14*/A13*/A12 * /A11*/A10*A9*/A8 * /A7*/A6* A5* A4 	; $0230
/CSIO	= /A15*/A14*/A13*/A12 * /A11*/A10*A9*/A8 * /A7* A6		; $0240 - $027f

DESCRIPTION:
-
